out_dir: results
metric_best: mIoU
wandb:
  use: True
  project: S3DIS
dataset:
  format: PyG-S3DISOnDisk
  # name: 
  task: graph # Even though S3DIS is a node-level task, this needs to be set as 'graph'. The reason why is known only to God, and maybe the authors of the code. I definitely don't.
  task_type: classification
  transductive: False
  split_mode: standard
  node_encoder: True
  node_encoder_name: LinearNode # the node features (= normals) are already enhanced with the positions of the points
  node_encoder_bn: False
  edge_encoder: True
  edge_encoder_name: DummyEdge
  edge_encoder_bn: False
prep:
  exp: True
  exp_deg: 3
  add_edge_index: True # add real edges beside expander edges
  num_virt_node: 3
train:
  mode: custom
  batch_size: 8
  eval_period: 1
  ckpt_period: 100
  shuffle: False
model:
  type: MultiModel
  loss_fun: weighted_cross_entropy # because there is a large class imbalance
  edge_decoding: dot
gt: 
  layer_type: CustomGatedGCN+Exphormer
  layers: 8
  n_heads: 4
  dim_hidden: 52  # `gt.dim_hidden` must match `gnn.dim_inner`
  dropout: 0.1
  attn_dropout: 0.0 # to make it comparable with other Transformer methods
  layer_norm: False
  batch_norm: True
gnn:
  head: inductive_node
  layers_pre_mp: 0
  layers_post_mp: 2
  dim_inner: 52  # `gt.dim_hidden` must match `gnn.dim_inner`
  batchnorm: True
  act: relu
  dropout: 0.0
  agg: mean
  normalize_adj: False
#optim:
#  clip_grad_norm: True
#  optimizer: adamW
#  weight_decay: 0.0
#  base_lr: 0.0005
#  max_epoch: 1000
#  scheduler: reduce_on_plateau
#  reduce_factor: 0.5
#  schedule_patience: 10
#  min_lr: 1e-5
optim:
  clip_grad_norm: True
  batch_accumulation: 2
  optimizer: adamW
  weight_decay: 1e-5
  base_lr: 0.0005
  max_epoch: 200
  scheduler: cosine_with_warmup
  num_warmup_epochs: 10
